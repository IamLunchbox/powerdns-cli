# This workflow will upload a Python Package to PyPI when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Release on git tag and push to pypi

on:
  push:
    tags:
      - "*.*.*"

permissions:
  contents: read

jobs:
  integration-test:
    uses: ./.github/workflows/integration.yml
  unit-test:
    uses: ./.github/workflows/unit.yml
  release-build:
    runs-on: ubuntu-latest
    needs:
      - integration-test
      - unit-test
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Extract version from pyproject.toml
        id: project_version
        run: |
          version=$(grep '^version\s*=' pyproject.toml | head -1 | sed -E 's/version\s*=\s*"(.*)"/\1/')
          echo "version=$version" >> $GITHUB_OUTPUT
      - name: Get git tag
        id: git_tag
        run: |
          tag="${GITHUB_REF#refs/tags/}"
          echo "tag=${tag#v}" >> $GITHUB_OUTPUT
      - name: Fail if pyproject version is != git tag
        run: |
          if [ "${{ steps.project_version.outputs.version }}" != "${{ steps.git_tag.outputs.tag }}" ]; then
            echo "Tag (v${{ steps.git_tag.outputs.tag }}) does not match project version (${{ steps.project_version.outputs.version }})"
            exit 1
          fi
      - name: Release
        uses: softprops/action-gh-release@v2
      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Build release distributions
        run: |
          # NOTE: put your own distribution build steps here.
          python -m pip install build
          python -m build

      - name: Upload distributions
        uses: actions/upload-artifact@v4
        with:
          name: release-dists
          path: dist/

  pypi-publish:
    runs-on: ubuntu-latest
    needs:
      - release-build
    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write

    # Dedicated environments with protections for publishing are strongly recommended.
    # For more information, see: https://docs.github.com/en/actions/deployment/targeting-different-environments/using-environments-for-deployment#deployment-protection-rules
    environment:
      name: pypi
      # OPTIONAL: uncomment and update to include your PyPI project URL in the deployment status:
      url: https://pypi.org/p/powerdns-cli/

    steps:
      - name: Retrieve release distributions
        uses: actions/download-artifact@v5
        with:
          name: release-dists
          path: dist/

      - name: Publish release distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
